{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.js","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","modifiedData","console","log","fetchDailyData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","alt","src","coronaImage","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.01d2041d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1DNdo\",\"card\":\"Cards_card__7jvoB\",\"infected\":\"Cards_infected__1PCc1\",\"recovered\":\"Cards_recovered__2m8y8\",\"deaths\":\"Cards_deaths__AHU5d\"};","import React from 'react';\r\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core';\r\nimport styles from './Cards.module.css';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nconst Cards = ({data: {confirmed, recovered, deaths, lastUpdate}}) => {\r\n    if(!confirmed){\r\n        return '..loading'\r\n    }\r\n    return(\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={recovered.value} duration={2.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={deaths.value} duration={2.5} separator=\",\" />    \r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of deaths caused by COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url='https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n\r\n    let changeableUrl = url;\r\n\r\n    if(country){\r\n        changeableUrl = `${url}/countries/${country}`\r\n    }\r\n    try {\r\n        const { data : {confirmed, recovered,deaths , lastUpdate}} = await axios.get(changeableUrl);\r\n\r\n        // const {data} = await axios.get(url)\r\n\r\n        // const modifiedData ={\r\n        //     confirmed: data.confirmed,\r\n        //     recovered: data.recovered,\r\n        //     deaths: data.deaths,\r\n        //     lastUpdate: data.lastUpdate,\r\n        // }\r\n\r\n        const modifiedData = {\r\n            // confirmed : confirmed,\r\n            // recovered: recovered,\r\n            // deaths: deaths,\r\n            // lastUpdate: lastUpdate,\r\n\r\n            confirmed, recovered, deaths, lastUpdate\r\n        }\r\n        return modifiedData;\r\n\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\n\r\nexport const fetchDailyData = async() =>{\r\n\r\n    try {\r\n        const {data} = await axios.get(`${url}/daily`);\r\n\r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date:dailyData.reportDate,\r\n        }));\r\n\r\n        return modifiedData;\r\n\r\n    } catch (error) {\r\n        \r\n    }\r\n\r\n    \r\n}\r\n\r\nexport const fetchCountries = async() => {\r\n    try {\r\n        const {data : {countries}} = await axios.get(`${url}/countries`);\r\n\r\n        return countries.map((country)=> country.name);\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}","import React, {useState, useEffect} from 'react';\r\nimport {fetchDailyData} from '../../api'; \r\n\r\nimport  styles from './Chart.module.css';\r\nimport {Line, Bar} from 'react-chartjs-2';\r\n\r\nconst Chart = ({data:{confirmed, recovered, deaths}, country}) => {\r\n\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        \r\n        const fetchAPI = async()=>{\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n        fetchAPI();\r\n    },[]);\r\n\r\n    const lineChart=(\r\n        dailyData.length\r\n        ? (\r\n        <Line \r\n        data={{\r\n            labels: dailyData.map(({date})=> date),\r\n            datasets: [{\r\n                data: dailyData.map(({confirmed})=> confirmed),\r\n                label: 'Infected',\r\n                borderColor: '#3333ff',\r\n                fill: true,\r\n            },{\r\n                data: dailyData.map(({deaths})=> deaths),\r\n                label: 'Deaths',\r\n                borderColor: 'red',\r\n                backgroundColor: 'rgba(255,0,0,0.5)',\r\n                fill: true,\r\n            }],\r\n        }}\r\n        />) : null\r\n    );\r\n\r\nconst barChart = (\r\n    confirmed\r\n    ? (\r\n        <Bar\r\n        data={{\r\n            labels: ['Infected', 'Recovered', 'Deaths'],\r\n            datasets:[{\r\n            label:'People',\r\n            backgroundColor: [\r\n                'rgb(0,0,250, 0.5)',\r\n                'rgb(0,255,0, 0.5)',\r\n                'rgb(250,0,0, 0.5)',\r\n            ],\r\n            data:[confirmed.value, recovered.value, deaths.value]\r\n            }]\r\n        }}\r\n        options={{\r\n            legend: {display:false},\r\n            title: {display:true, text: `Current State in ${country}`}\r\n        }}\r\n        />\r\n    ) : null\r\n)\r\n\r\n    return(\r\n        <div className={styles.container}>\r\n            {country ? barChart : lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import React, {useEffect, useState} from 'react';\r\nimport { FormControl, NativeSelect } from '@material-ui/core'\r\n\r\nimport styles from './CountryPicker.module.css';\r\nimport {fetchCountries} from '../../api'\r\n\r\nconst CountryPicker = ({handleCountryChange}) => {\r\n\r\n    const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n    useEffect(() =>{\r\n        const fetchAPI = async() =>{\r\n            setFetchedCountries(await fetchCountries())\r\n        }\r\n\r\n    fetchAPI();\r\n    },[setFetchedCountries]);\r\n\r\n\r\n    return(\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e) =>handleCountryChange(e.target.value)}>\r\n                <option value=\"\">Global</option>\r\n                {fetchedCountries.map((country,i) => <option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import React, { Component } from 'react'\r\n\r\nimport { Cards, Chart, CountryPicker} from './components';\r\nimport styles from './App.module.css';\r\nimport { fetchData} from './api';\r\nimport coronaImage from './images/image.png';\r\n\r\n\r\nclass App extends Component{\r\n\r\n    state={\r\n        data:{},\r\n        country:'',\r\n    }\r\n\r\nasync componentDidMount() {\r\n    \r\n    const fetchedData = await fetchData();\r\n    this.setState({ data: fetchedData });\r\n\r\n}\r\n handleCountryChange = async (country) => {\r\n    const fetchedData = await fetchData(country);\r\n    this.setState({ data: fetchedData , country: country});\r\n     //fetch the data\r\n     //set the data\r\n }\r\n    render(){\r\n        const { data , country} =this.state;\r\n        return(\r\n            <div className={styles.container}>\r\n                <img className={styles.image} alt=\"COVID-19\" src={coronaImage}/>\r\n                <Cards data={data}/>\r\n                <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n                <Chart data={data} country={country}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />,document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__gdIRU\",\"image\":\"App_image__1prx8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__ev1WU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__3CKuS\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}